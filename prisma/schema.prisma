generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Author (One-to-Many: An author can have multiple books)
model Author {
  id    String  @id @default(uuid()) 
  name  String
  bio   String?
  books Book[] // One-to-Many: One author has many books
}

// Category (One-to-Many: A category can have multiple books)
model Category {
  id    String  @id @default(uuid()) 
  name  String  @unique
  books Book[]  // One-to-Many: One category has many books
}

// Book (Stores all input fields)
model Book {
  id          String   @id @default(uuid())
  title       String
  description String
  price       Float
  isbn        String   @unique
  available   Boolean  @default(true)
  website     String?
  publishedAt DateTime @default(now())

  // One-to-Many: A book belongs to one author
  authorId    String
  author      Author   @relation(fields: [authorId], references: [id])

  // One-to-Many: A book belongs to one category
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])

  // One-to-One: A book has one cover image
  coverImage  Image?

  // Reviews (Optional: Remove if not needed)
  reviews Review[]
}

// Image (One-to-One: A book has one cover image)
model Image {
  id      String @id @default(uuid())
  url     String
  book    Book   @relation(fields: [id], references: [id])
}

// Review (One-to-Many: A book has multiple reviews)
model Review {
  id      String  @id @default(uuid())
  content String
  rating  Int
  bookId  String
  book    Book    @relation(fields: [bookId], references: [id])
}
